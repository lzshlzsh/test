/*
 * =====================================================================================
 *
 *       Filename:  haha.cpp
 *
 *    Description:  
 *
 *        Version:  1.0
 *        Created:  09/08/2015 01:15:28 PM
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  sammieliu (), sammieliu@tencent.com
 *   Organization:  
 *
 * =====================================================================================
 */

#include <sched.h>
#include <string.h>
#include <sys/types.h>
#include <unistd.h>
#include <errno.h>
#include <sys/time.h>
#include <stdint.h>
#include <sys/wait.h>

#include <iostream>
#include <cstdlib>
#include <string>
#include <fstream>
#include <sstream>

using namespace std;

struct CpuStat {
  uint64_t total_user_hz_;
  uint64_t idle_user_hz_;
};

extern double s_real_request[1440];

static int setaffinity(const int cpu_idx)
{
  cpu_set_t cpu_set[1];
  int err;
  auto pid = getpid();

  CPU_ZERO(cpu_set);

  std::cout << "pid " << pid << " bind to cpu: " << cpu_idx << std::endl;
  CPU_SET(cpu_idx, cpu_set);

  err = sched_setaffinity(pid, sizeof(cpu_set) / sizeof(cpu_set[0]), cpu_set);
  if (err < 0) {
    std::cout << pid << " sched_setaffinity: " << strerror(errno) << endl;
    return -1;
  }

  return 0;
}

static int get_cpu_stat(const int cpu_idx, CpuStat &cpu_stat)
{
  string line;
  stringstream ss;
  uint64_t user_hz;
  ifstream ifs("/proc/stat");
  string opaque;

  //cpu  5286815 30061 9116059 17959275 204176 5 3826 0 0 0
  getline(ifs, line);
  //cpu0 534737 3060 958318 7939560 82868 0 1257 0 0 0
  for (auto i = 0; i <= cpu_idx; ++i) {
    getline(ifs, line);
  }

  cpu_stat.total_user_hz_ = 0;
  cpu_stat.idle_user_hz_ = 0;
  ss.str(line);
  ss >> opaque;
  for (int i = 0; !(ss.rdstate() & (stringstream::eofbit | stringstream::failbit | stringstream::badbit)); ++i) {
    ss >> user_hz;
    cpu_stat.total_user_hz_ += user_hz;
    if (3 == i) {
      cpu_stat.idle_user_hz_ = user_hz;
    }
  }
  return 0;
}

static int get_cpu_percent(const int cpu_idx, const CpuStat &last, CpuStat &now, int &percent)
{
  get_cpu_stat(cpu_idx, now);

  if (now.total_user_hz_ > last.total_user_hz_) {
    percent = 100 - (now.idle_user_hz_ - last.idle_user_hz_) * 100 / (now.total_user_hz_ - last.total_user_hz_);
  } else {
    percent = 100;
  }

  return 0;
}

static int run(const int cpu_idx, const int required_percent)
{
  const uint64_t check_interval_us = 1000000;

  CpuStat last_stat, now_stat;
  struct timeval last_tm, now_tm;
  struct tm s_tm;
  uint64_t interval;
  int percent;
  double max_request = 0.0;
  int percent_with_request;

  if (setaffinity(cpu_idx)) {
    return -1;
  }

  for (uint32_t i = 0; i < sizeof(s_real_request) / sizeof(s_real_request[0]); ++i) {
    if (max_request < s_real_request[i]) {
      max_request = s_real_request[i];
    }
  }

  cout << "max_request: " << max_request << endl;

  gettimeofday(&last_tm, NULL);
  get_cpu_stat(cpu_idx, last_stat);
  for (; ;) {
    gettimeofday(&now_tm, NULL);
    interval = (now_tm.tv_sec - last_tm.tv_sec) * 1000000 + (now_tm.tv_usec - last_tm.tv_usec);
    get_cpu_percent(cpu_idx, last_stat, now_stat, percent);

    if (interval > 0) {
      localtime_r(&now_tm.tv_sec, &s_tm);
      percent_with_request =  static_cast<int>(required_percent * s_real_request[s_tm.tm_hour * 60 + s_tm.tm_min] / max_request);
      if (percent > percent_with_request) {
        usleep((percent - percent_with_request) * interval / 100);
      }
    }
    if (interval > check_interval_us) {
      last_tm = now_tm;
      last_stat = now_stat;
    }
  }

  return 0;
}

static int run(const int required_percent) {
  string line;
  std::ifstream ifs("/proc/stat");

  for (;;) {
    std::string tmp;
    getline(ifs, tmp);
    if (!tmp.compare(0, 3, "cpu")) {
      line = tmp;
    } else {
      break;
    }
  }
  auto i = line.find(" ");
  if (i == std::string::npos) {
    return -__LINE__;
  }
  line[i] = '\0';
  auto max_cpu = atoi(line.substr(3).c_str()) + 1;
  std::cout << "max_cpu: " << max_cpu << std::endl;

  for (auto i = 0; i < max_cpu; ++i) {
    auto pid = fork();
    if (pid == 0) {
      return run(i, required_percent);
    }
  }

  for (; ;) {
    int status;
    auto pid = wait(&status);
    if (pid == -1) {
      std::cout << pid << " " << strerror(errno) << std::endl;
      usleep(1000000);
    } else {
      std::cout << pid << " down, restart ..." << std::endl;
      pid = fork();
      if (pid == 0) {
        return run(i, required_percent);
      }
    }
  }
}


int main(int argc, char **argv)
{
  if (argc != 2) {
    cerr << "usage: " << argv[0] << " <cpu_percent>" << endl;
    cerr << "e.g. " << argv[0] << " 60" << endl;
    return -1;
  }
  return run(atoi(argv[1]));
}

double s_real_request[1440] = {
  1877737,
  1921247,
  1783990,
  1738999,
  1688868,
  1708146,
  1672865,
  1615798,
  1580720,
  1553073,
  1578343,
  1548315,
  1499496,
  1486736,
  1476362,
  1498979,
  1464699,
  1417193,
  1403738,
  1386446,
  1410553,
  1386719,
  1339946,
  1323384,
  1305496,
  1321750,
  1300798,
  1269192,
  1251597,
  1237783,
  1260583,
  1248262,
  1204923,
  1186338,
  1180423,
  1203778,
  1180552,
  1142847,
  1132817,
  1113368,
  1133914,
  1118483,
  1083930,
  1073167,
  1057250,
  1082354,
  1061808,
  1024082,
  1016713,
  1004526,
  1027383,
  1017049,
  978831,
  969265,
  965085,
  992256,
  970569,
  939063,
  930911,
  918840,
  954970,
  947118,
  905857,
  891658,
  883472,
  912582,
  895403,
  860265,
  849401,
  840070,
  872176,
  873308,
  841740,
  827909,
  819543,
  841580,
  823493,
  787828,
  779549,
  774116,
  797688,
  788404,
  759380,
  752554,
  744283,
  766910,
  750953,
  721404,
  709710,
  706640,
  739245,
  729795,
  695588,
  688511,
  687050,
  714334,
  703858,
  674465,
  668158,
  661991,
  687829,
  676008,
  649104,
  644770,
  635368,
  657537,
  646775,
  621754,
  615720,
  612618,
  641048,
  632361,
  606273,
  600342,
  597351,
  620558,
  607859,
  583100,
  576543,
  571795,
  605884,
  603481,
  575737,
  565991,
  566028,
  592707,
  583875,
  559420,
  550989,
  549979,
  578390,
  569441,
  546327,
  539701,
  534879,
  559921,
  546578,
  523238,
  518239,
  516936,
  543204,
  536706,
  507741,
  504973,
  500055,
  524009,
  516581,
  492511,
  491493,
  487708,
  515325,
  510355,
  484303,
  477887,
  481119,
  506670,
  495033,
  470772,
  463423,
  464336,
  490853,
  483977,
  459729,
  455157,
  454276,
  477644,
  467552,
  447151,
  441880,
  437583,
  465379,
  461413,
  438358,
  434863,
  434842,
  460282,
  452306,
  431906,
  428277,
  428046,
  487523,
  493937,
  450935,
  438674,
  435787,
  469922,
  467803,
  434035,
  425825,
  420319,
  454193,
  440762,
  420348,
  416155,
  413511,
  443937,
  426997,
  407521,
  403980,
  403087,
  432183,
  423617,
  403522,
  399069,
  397351,
  425351,
  414163,
  393274,
  391761,
  389516,
  426336,
  423704,
  397512,
  391919,
  388212,
  416395,
  404379,
  385380,
  380884,
  378597,
  411829,
  398687,
  372884,
  368752,
  366292,
  392612,
  381021,
  363046,
  360170,
  359327,
  388282,
  380751,
  364335,
  360520,
  359624,
  385510,
  373961,
  355209,
  352984,
  354462,
  393350,
  397203,
  368303,
  358616,
  355066,
  380242,
  371895,
  354967,
  352255,
  349964,
  376547,
  373546,
  354160,
  352200,
  348458,
  376745,
  366993,
  348454,
  347336,
  348627,
  371863,
  369762,
  349326,
  346479,
  345228,
  369454,
  361988,
  345853,
  341542,
  345665,
  378944,
  381047,
  357751,
  353407,
  351294,
  375420,
  369045,
  350444,
  349543,
  349673,
  377721,
  375504,
  356467,
  354747,
  355383,
  380717,
  375340,
  360349,
  358239,
  359236,
  395522,
  403471,
  372771,
  366588,
  367511,
  393064,
  390694,
  376656,
  378276,
  382360,
  444137,
  482949,
  440523,
  413729,
  407571,
  433310,
  437275,
  412801,
  410641,
  412274,
  447284,
  448177,
  427650,
  426456,
  426136,
  459500,
  458189,
  442846,
  442558,
  447966,
  491211,
  495748,
  472181,
  468987,
  472828,
  502423,
  502502,
  490895,
  494347,
  503328,
  580222,
  613700,
  568142,
  555287,
  556084,
  588551,
  590598,
  573161,
  574688,
  579402,
  630784,
  643989,
  619337,
  617217,
  623855,
  665448,
  669916,
  651126,
  655197,
  667517,
  726858,
  742613,
  713358,
  714578,
  721465,
  762738,
  766438,
  757303,
  768635,
  794522,
  956480,
  1067750,
  963835,
  909369,
  898841,
  941105,
  955485,
  920261,
  915379,
  920619,
  993354,
  1004916,
  962540,
  963134,
  967365,
  1020757,
  1027649,
  998697,
  1003235,
  1014013,
  1093250,
  1110267,
  1068203,
  1061428,
  1065884,
  1112916,
  1118049,
  1097806,
  1103586,
  1121980,
  1272767,
  1324716,
  1232213,
  1199713,
  1193888,
  1241916,
  1241441,
  1210410,
  1201847,
  1208451,
  1287234,
  1304894,
  1254918,
  1244815,
  1247862,
  1303213,
  1300789,
  1272431,
  1267113,
  1277653,
  1354134,
  1373077,
  1324932,
  1312497,
  1310053,
  1350963,
  1351137,
  1331167,
  1335228,
  1350341,
  1527917,
  1601724,
  1487354,
  1440371,
  1420471,
  1466001,
  1464325,
  1422138,
  1416713,
  1416237,
  1489828,
  1495463,
  1447976,
  1435676,
  1432665,
  1488612,
  1481919,
  1450789,
  1439950,
  1451136,
  1522563,
  1518383,
  1472736,
  1468334,
  1465757,
  1507399,
  1500525,
  1478147,
  1471441,
  1479702,
  1585728,
  1593653,
  1529320,
  1507448,
  1514476,
  1550901,
  1537597,
  1509424,
  1502078,
  1502774,
  1560541,
  1549234,
  1516284,
  1514002,
  1518365,
  1558907,
  1545711,
  1524782,
  1524097,
  1531922,
  1583558,
  1572532,
  1547442,
  1548566,
  1558245,
  1590114,
  1583560,
  1566753,
  1568396,
  1569429,
  1645330,
  1639058,
  1589488,
  1575538,
  1568554,
  1600700,
  1586113,
  1559439,
  1558253,
  1551268,
  1595416,
  1586115,
  1561962,
  1560450,
  1556775,
  1590752,
  1578909,
  1564046,
  1566006,
  1565140,
  1614512,
  1602224,
  1583249,
  1580713,
  1586071,
  1621682,
  1611277,
  1598673,
  1600494,
  1607220,
  1666206,
  1652809,
  1616866,
  1614784,
  1611605,
  1647021,
  1632634,
  1616413,
  1613682,
  1614847,
  1658241,
  1647513,
  1634318,
  1631238,
  1634214,
  1673931,
  1667292,
  1658809,
  1655455,
  1658206,
  1694499,
  1688437,
  1675943,
  1676118,
  1666019,
  1710837,
  1698191,
  1684882,
  1686330,
  1682724,
  1723476,
  1726169,
  1691693,
  1691914,
  1691685,
  1714888,
  1697331,
  1685111,
  1680726,
  1675778,
  1750240,
  1782752,
  1769406,
  1771668,
  1772706,
  1803506,
  1786209,
  1770296,
  1778190,
  1785891,
  1830480,
  1823889,
  1800307,
  1802188,
  1800056,
  1838713,
  1812437,
  1803027,
  1798304,
  1792170,
  1839822,
  1831852,
  1805305,
  1812315,
  1807779,
  1836426,
  1824803,
  1815359,
  1816513,
  1818276,
  1847255,
  1847406,
  1834386,
  1841331,
  1838334,
  1872537,
  1857825,
  1861234,
  1866081,
  1856143,
  1884497,
  1884781,
  1869580,
  1848179,
  1813034,
  1839213,
  1818864,
  1809245,
  1801715,
  1797108,
  1837510,
  1852557,
  1830220,
  1825022,
  1819747,
  1843451,
  1832010,
  1812341,
  1811864,
  1810644,
  1831567,
  1821215,
  1796315,
  1792493,
  1795764,
  1824676,
  1816309,
  1803647,
  1801852,
  1794536,
  1823901,
  1827043,
  1802796,
  1802791,
  1810391,
  1829420,
  1824364,
  1806752,
  1807965,
  1808971,
  1839681,
  1838492,
  1817632,
  1826667,
  1825190,
  1851339,
  1842791,
  1822682,
  1825097,
  1819209,
  1847324,
  1843110,
  1818195,
  1818442,
  1823975,
  1852072,
  1847660,
  1829102,
  1848077,
  1848025,
  1875859,
  1864336,
  1840634,
  1835391,
  1837817,
  1863934,
  1858640,
  1843315,
  1835668,
  1841393,
  1886006,
  1886077,
  1868417,
  1861030,
  1862951,
  1901941,
  1901462,
  1881453,
  1879145,
  1883277,
  1921503,
  1913851,
  1890642,
  1890010,
  1887924,
  1915987,
  1905169,
  1890165,
  1897468,
  1899490,
  1925164,
  1921077,
  1904291,
  1900616,
  1898583,
  1925801,
  1918707,
  1898645,
  1903300,
  1908108,
  1942217,
  1945692,
  1915576,
  1918731,
  1917982,
  1954709,
  1947307,
  1939841,
  1938766,
  1946607,
  1992177,
  1984762,
  1974851,
  1980038,
  1989986,
  2027258,
  2015415,
  2010735,
  2016944,
  2029279,
  2066803,
  2071217,
  2063718,
  2066294,
  2079195,
  2133977,
  2089746,
  2098025,
  2095325,
  2120909,
  2205421,
  2206300,
  2166494,
  2168336,
  2147472,
  2204585,
  2195620,
  2185323,
  2199395,
  2206702,
  2258284,
  2261326,
  2249662,
  2256311,
  2270259,
  2328139,
  2319491,
  2313613,
  2324606,
  2338298,
  2378407,
  2387917,
  2373662,
  2385145,
  2379495,
  2426781,
  2415306,
  2405552,
  2398651,
  2402757,
  2441553,
  2436431,
  2409391,
  2400558,
  2391286,
  2420420,
  2403109,
  2380370,
  2378906,
  2384599,
  2431418,
  2414769,
  2376607,
  2366956,
  2366769,
  2408783,
  2404756,
  2376780,
  2371511,
  2356938,
  2377810,
  2391792,
  2372910,
  2365934,
  2347498,
  2371108,
  2347975,
  2325725,
  2328983,
  2332746,
  2384664,
  2359802,
  2297671,
  2286436,
  2272108,
  2290752,
  2265237,
  2216205,
  2208392,
  2203695,
  2243789,
  2220310,
  2179514,
  2169922,
  2156975,
  2187858,
  2192248,
  2153881,
  2128840,
  2123322,
  2166972,
  2149227,
  2110256,
  2095187,
  2085881,
  2129945,
  2114828,
  2082173,
  2073298,
  2064175,
  2104149,
  2086486,
  2047823,
  2034800,
  2022949,
  2049412,
  2030077,
  1994743,
  1970741,
  1968404,
  2010126,
  1991925,
  1965890,
  1952584,
  1941483,
  1989242,
  1972328,
  1947380,
  1936649,
  1924854,
  1975739,
  1966439,
  1933116,
  1926598,
  1926345,
  1963662,
  1943441,
  1918766,
  1916950,
  1912467,
  1966011,
  1951281,
  1909694,
  1894556,
  1888942,
  1917065,
  1896819,
  1863859,
  1853558,
  1849116,
  1891739,
  1876133,
  1844994,
  1836230,
  1830888,
  1861954,
  1851693,
  1826051,
  1826220,
  1826427,
  1857026,
  1865554,
  1840430,
  1841741,
  1830085,
  1859909,
  1843368,
  1817118,
  1808102,
  1808749,
  1853133,
  1837482,
  1808051,
  1800220,
  1790673,
  1836779,
  1813820,
  1786652,
  1789730,
  1782378,
  1810116,
  1791398,
  1768051,
  1761400,
  1759580,
  1798907,
  1790736,
  1777809,
  1782335,
  1775474,
  1809985,
  1799839,
  1778635,
  1772956,
  1754081,
  1797294,
  1780496,
  1760314,
  1757378,
  1758956,
  1810769,
  1822687,
  1798404,
  1793155,
  1783060,
  1807056,
  1789981,
  1767178,
  1745755,
  1775675,
  1803670,
  1782991,
  1765257,
  1765386,
  1767701,
  1803338,
  1798559,
  1777140,
  1776840,
  1772840,
  1798671,
  1788613,
  1772172,
  1772696,
  1772889,
  1806800,
  1800068,
  1767331,
  1775383,
  1776700,
  1815490,
  1802777,
  1777902,
  1776673,
  1777794,
  1806048,
  1795747,
  1778923,
  1770570,
  1770762,
  1799142,
  1797716,
  1775816,
  1769688,
  1769324,
  1802351,
  1794119,
  1776785,
  1778205,
  1778626,
  1822391,
  1804622,
  1785312,
  1783004,
  1785628,
  1823042,
  1809917,
  1785870,
  1786970,
  1788038,
  1824512,
  1827197,
  1803515,
  1802723,
  1796851,
  1833176,
  1822996,
  1803643,
  1801806,
  1803089,
  1842756,
  1833126,
  1813925,
  1817082,
  1816861,
  1854011,
  1834594,
  1827977,
  1827514,
  1828345,
  1868676,
  1860420,
  1841143,
  1832220,
  1842888,
  1870199,
  1863657,
  1841979,
  1846768,
  1839493,
  1877236,
  1870920,
  1856878,
  1857335,
  1859587,
  1892696,
  1879674,
  1859912,
  1864206,
  1866285,
  1905503,
  1893131,
  1878840,
  1872749,
  1879218,
  1921318,
  1904005,
  1888450,
  1891988,
  1892016,
  1926055,
  1931006,
  1916268,
  1908116,
  1913269,
  1955035,
  1936663,
  1924675,
  1928570,
  1932692,
  1975168,
  1969852,
  1943093,
  1939141,
  1943762,
  1982385,
  1987272,
  1964091,
  1968837,
  1963603,
  2010413,
  2000324,
  1991396,
  2000856,
  2011635,
  2048969,
  2041019,
  2025908,
  2026505,
  2028122,
  2075216,
  2066490,
  2049368,
  2060699,
  2064368,
  2095725,
  2075851,
  2065839,
  2060491,
  2069528,
  2106345,
  2096389,
  2074317,
  2081031,
  2084142,
  2113836,
  2110157,
  2095387,
  2103339,
  2102021,
  2146362,
  2136627,
  2118806,
  2133122,
  2140035,
  2177050,
  2146955,
  2165834,
  2158613,
  2166409,
  2215003,
  2214387,
  2193256,
  2199656,
  2193375,
  2230145,
  2222099,
  2210276,
  2184566,
  2210306,
  2263859,
  2248808,
  2218782,
  2216516,
  2208364,
  2243590,
  2232956,
  2203706,
  2207094,
  2219008,
  2268810,
  2252534,
  2235908,
  2241025,
  2250068,
  2289001,
  2277893,
  2262231,
  2263050,
  2255988,
  2304518,
  2292544,
  2273666,
  2286213,
  2289950,
  2327966,
  2301019,
  2290319,
  2297016,
  2299652,
  2346119,
  2332658,
  2302679,
  2292607,
  2297781,
  2333075,
  2309656,
  2297183,
  2299451,
  2296662,
  2332858,
  2321827,
  2296522,
  2300230,
  2307870,
  2346813,
  2340850,
  2311717,
  2317843,
  2320433,
  2374845,
  2443982,
  2428305,
  2433075,
  2428609,
  2472385,
  2470464,
  2444810,
  2452278,
  2455826,
  2495982,
  2497363,
  2464965,
  2457153,
  2466905,
  2495634,
  2482689,
  2474928,
  2473193,
  2482494,
  2520378,
  2519796,
  2507901,
  2502226,
  2510553,
  2566627,
  2554780,
  2534974,
  2535864,
  2540750,
  2593795,
  2580925,
  2568290,
  2581614,
  2571556,
  2614431,
  2620082,
  2599830,
  2600955,
  2613610,
  2672578,
  2656230,
  2639366,
  2640050,
  2635858,
  2679128,
  2666854,
  2640854,
  2629062,
  2595737,
  2607319,
  2582438,
  2557855,
  2558181,
  2561351,
  2609793,
  2613602,
  2587647,
  2588955,
  2586523,
  2631854,
  2640437,
  2610276,
  2608600,
  2616375,
  2649402,
  2643526,
  2623295,
  2624589,
  2639810,
  2720189,
  2731580,
  2692142,
  2687941,
  2694563,
  2739195,
  2720346,
  2697205,
  2699944,
  2697075,
  2753953,
  2751915,
  2727335,
  2737602,
  2748173,
  2810836,
  2804831,
  2769480,
  2771298,
  2774457,
  2809202,
  2819975,
  2809388,
  2812410,
  2819153,
  2861659,
  2855333,
  2818085,
  2825102,
  2826718,
  2889031,
  2883606,
  2846782,
  2853843,
  2843217,
  2893821,
  2886213,
  2858333,
  2854697,
  2859558,
  2904995,
  2904945,
  2885000,
  2886854,
  2867348,
  2913383,
  2904175,
  2869082,
  2874411,
  2899813,
  2954414,
  2978088,
  2941207,
  2938542,
  2940394,
  2984539,
  2982647,
  2968059,
  2935416,
  2964234,
  3014325,
  3017762,
  2979476,
  2981328,
  2990623,
  3026005,
  3015927,
  2988242,
  2997754,
  2997246,
  3052662,
  3058143,
  3016765,
  3019234,
  3025366,
  3091652,
  3077039,
  3050233,
  3058920,
  3056196,
  3107275,
  3094475,
  3066917,
  3062279,
  3047038,
  3117874,
  3098731,
  3096447,
  3088808,
  3082763,
  3147291,
  3139984,
  3097631,
  3071417,
  3063128,
  3108195,
  3092737,
  3082444,
  3066239,
  3055050,
  3110632,
  3098327,
  3052498,
  3048159,
  3048621,
  3103357,
  3081225,
  3046604,
  3043084,
  3037359,
  3100664,
  3092985,
  3077403,
  3093170,
  3116733,
  3182781,
  3175653,
  3156135,
  3150325,
  3135686,
  3127088,
  3180310,
  3128658,
  3119648,
  3121416,
  3165939,
  3144594,
  3105644,
  3101004,
  3079911,
  3118246,
  3114324,
  3069026,
  3061303,
  3040620,
  3088017,
  3063386,
  3005298,
  3041143,
  3018223,
  3038648,
  3014957,
  2981580,
  2975421,
  2939118,
  2982107,
  2962034,
  2931804,
  2945398,
  2945039,
  2951097,
  2917995,
  2882171,
  2876960,
  2846948,
  2896163,
  2895615,
  2858607,
  2788874,
  2806892,
  2844404,
  2840548,
  2785985,
  2764652,
  2763232,
  2788533,
  2777635,
  2729787,
  2709800,
  2705543,
  2778607,
  2717296,
  2647796,
  2655044,
  2629822,
  2749411,
  2789318,
  2739441,
  2712350,
  2710372,
  2761114,
  2748196,
  2697521,
  2672731,
  2652849,
  2672181,
  2608260,
  2581566,
  2564984,
  2542289,
  2566164,
  2533257,
  2484611,
  2465472,
  2441210,
  2467573,
  2420540,
  2358272,
  2343570,
  2317401,
  2346268,
  2324077,
  2285016,
  2263906,
  2225435,
  2234647,
  2183100,
  2145699,
  2122883,
  2100633,
  2137177,
  2107758,
  2056613,
  2038679,
  2019101,
  2034813,
  1993568,
  1955111,
  1944702,
  1940162,
  1963434,
  1934313,
  1891087,
  1863890,
  1844513,
  1887161,
  1858663,
  1828099,
  1809344,
  1781136,
  1806096,
  1845208,
  1809099,
  1795549,
  1783729,
  1809135,
  1786172,
  1787063,
  1793136,
  1801668,
};
